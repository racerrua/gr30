Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash
Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.


JSON
 4. Создать внешний репозиторий c названием JSON.
------------
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone git@github.com:racerrua/JSON.git
------------
 6. Внутри локального JSON создать файл “new.json”.
>new.json
------------
 7. Добавить файл под гит.
git add new.json
------------
 8. Закоммитить файл.
git commit -m "add new.json"
------------
 9. Отправить файл на внешний GitHub репозиторий.
git push
------------
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
{
        "FullName": {
                "LastName": "Suchkov",
		"FirstName": "Dmitrii",
		"ThirdName": "Alexandrovych"
        },
        "Age": 34,
        "NumberOfPets": 0,
        "Earn": "5000$"
}
------------
 11. Отправить изменения на внешний репозиторий.
git add new.json
git commit -m "add modified new.json"
git push
------------
 12. Создать файл preferences.json
echo > preferences.json
------------
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json
{
        "FavoriteFilm": "Forest Gump",
        "FavoriteSerial": "Everybody Hates Chris",
        "FavoriteFood": "Fried potatos with onion and meat",
        "FavoriteTimeOfYear": "Summer",
        "CountryToGo": "Australia"
}
:wq
------------
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
vim skils.json
{
        "LessonsSkills": [
                "Client-Sever architecture",
                "HTTP methods of request to server",
                "HTTP server response codes",
                "Stractures of HTTP requests and responces",
                "What is JSON, XML. What's the structure of them",
                "Testing API by Postman",
                "Get and read logs from outside servers",
                "Sniffing http web traffic by Charles and Fiddler",
                "DevToolsOfWebBrowsers": ["Chrome", "FireFox", "Opera"],
                "VPN",
                "Mobule Testing"
        ]
}
:wq
------------
 15. Отправить сразу 2 файла на внешний репозиторий.
git add sklls.json preferences.json
git commit -m"add pref and skils JSON files" sklls.json preferences.json
git fetch - проверить изменения на сервере git
git push
------------
 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull
cat bug_report.json
{
  "id": 1,
  "title": "Very BIG Bug",
  "platform": "9¾",
  "priority": "The most importent",
  "description": "What the fuck?",
  "steps_to_reproduce": "Just do it!",
  "screenshot": "(͡° ͜ʖ ͡°) (͡°╭͜ʖ╮͡°) (✷‿✷))¯\_(ツ)_/¯ (V)(;,;)(V) (>^.^)>(^*o*)^"

}




XML
 21. Создать внешний репозиторий c названием XML.
------------
 22. Клонировать репозиторий XML на локальный компьютер.
git clone git@github.com:racerrua/XML.git
------------
 23. Внутри локального XML создать файл “new.xml”.
cat > new.xml
------------
 24. Добавить файл под гит.
git add new.xml
------------
 25. Закоммитить файл.
git commit -m"addnew.xml" new.xml
------------
 26. Отправить файл на внешний GitHub репозиторий.
git fetch
git push
------------
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE aboutme [
	<!ELEMENT aboutme (fio,age,num_pets,desired_salary)>
	<!ELEMENT fio (#PCDATA)>
	<!ELEMENT age  (#PCDATA)>
	<!ELEMENT num_pets (#PCDATA)>
	<!ELEMENT desired_salary (#PCDATA)>
	<!ENTITY first_name "Dmitrii">
	<!ENTITY last_name "Suchkov">
	]
>
<aboutme>
	<fio>&first_name; &last_name;</fio>
	<age>34</age>
	<num_pets>0</num_pets>
	<desired_salary currency="US Dollar $">4000</desired_salary>
</aboutme>
------------
 28. Отправить изменения на внешний репозиторий.
git add new.xml
git commit -m"add modified new.xml" new.xml
git push
------------
 29. Создать файл preferences.xml
cat preferences.xml
------------
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.

vim preferences.xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE my_pref [
        <!ELEMENT my_pref (film,tv_serial,food,season_year,country_togo)>
        <!ELEMENT film (#PCDATA)>
        <!ELEMENT tv_serial (#PCDATA)>
        <!ELEMENT food (#PCDATA)>
        <!ELEMENT season_year (#PCDATA)>
        <!ELEMENT country_togo (#PCATA)>
        ]
>
<my_pref>
        <film>Forest Gump</film>
        <tv_serial>Everybidy Hates Chris</tv_serial>
        <food>Fried potatos with onion and meat</food>
        <season_year>Summer</season_year>
        <country_togo>Australia</country_togo>
</mypref>
------------
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML

vim sklls.xml

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE lesson_skills [
        <!ELEMENT lesson_skills (skill)>
        <!ELEMENT skill (#PCDATA)>
        ]
>
<lesson_skills>
<skill id="1">Client-Sever architecture</skill>
<skill id="2">HTTP methods of request to server</skill>
<skill id="3">HTTP server response codes</skill>
<skill id="4">Stractures of HTTP requests and responces</skill>
<skill id="5">What is JSON, XML. What's the structure of them</skill>
<skill id="6">Testing API by Postman</skill>
<skill id="8">Get and read logs from outside servers</skill>
<skill id="9">Sniffing http web traffic by Charles and Fiddler</skill>
<skill id="10">Dev Tools of web browsers:</skill>
        <browser>Chrome</browser>
        <browser>Firefox</browser>
        <browser>Opera</browser>
<skill id="11">VPN</skill>
<skill id="12">Mobile Testing</skill>
</lesson_skills>
------------
 32. Сделать коммит в одну строку
git add . && git commit -m"add skills.xml & preferences.xml"
------------
 33. Отправить сразу 2 файла на внешний репозиторий
git push preferences.xml skils.xml
------------
 34. На веб интерфейсе создать файл bug_report.xml
------------
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе
------------
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML
------------
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе
------------
 38. Синхронизировать внешний и локальный репозиторий XML
git pull
cat bug_report.xml

<?xml version="1.0" encoding="UTF-8"?>
<bug id="1">
  <title>Very BIG Bug</title>
  <platform>9¾</platform>
  <priority>The most importent</priority>
  <description>What the fuck?</description>
  <steps_to_reproduce>Just do it!</steps_to_reproduce>
  <screenshot>(͡° ͜ʖ ͡°) (͡°╭͜ʖ╮͡°) (✷‿✷))¯\_(ツ)_/¯ (V)(;,;)(V) (>^.^)>(^*o*)^</screenshot>
</bug>


